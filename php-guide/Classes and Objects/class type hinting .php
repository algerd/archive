<?php
	/*
	 *  Контроль типа переменной - класса
	 */
	// если класс не имеет родителя, то имеет смысл указывать наследование от стандартного класса, чтобы затем при передаче переменной с объектом таких классов неявно указывать тип передаваемой переменной
	class Aclass extends stdClass {
	 function show() {return 'Hello';}
	}
	
	class Bclass {
	 function show() {return 'Hello';}
	}
	
    
	// общее указание типа передаваемой переменной - тип стандартный класс Bclass
	// такой способ можно использовать, если известно что передаваемая переменная - объект, но классы могут быть разными
	$fun = function (stdClass $object){ echo $object->show().' world!<br>'; };       	
	$fun(new Aclass());	
	
	// детальное указание типа передаваемой переменной - тип класс Bclass
	// надо стремиться именно к такой типизации, но если она невозможна, то применять типизацию с stdClass
	$fun2 = function (Bclass $object){ echo $object->show().' world!<br>'; };       	
	$fun2(new Bclass());
	
	// декларирование переменной как объект - пустышку
	$object = new stdClass;
?>