<?php
/*
!!! Настолятельно рекомендуется вместо этих методов использовать интерфейс Serializable !!!

public array __sleep ( void )  - Возращает строковое представление объекта
void __wakeup ( void )         - Десеарилизует строковое представление объекта

Функция serialize() проверяет, присутствует ли в вашем классе метод с "магическим" именем __sleep(). 
Если это так, то этот метод выполняется прежде любой операции сериализации.
Рекомендованное использование __sleep() состоит в завершении работы над данными, ждущими обработки или других подобных задач очистки. Кроме того, этот метод можно выполнять в тех случаях, когда нет необходимости сохранять полностью очень большие объекты.

Функция unserialize() проверяет наличие метода с "магическим" именем __wakeup(). Если такой имеется, то он может воссоздать все ресурсы объекта, принадлежавшие ему.
Обычно __wakeup() используется для восстановления любых соединений с базой данных, которые могли быть потеряны во время операции сериализации и выполнения других операций повторной инициализации. 
		
!!! Замечание:
1.Недопустимо возвращать в __sleep() имена приватных свойств объекта в родительский класс. Это приведет к предупреждению E_NOTICE. 
Вместо этого вы можете использовать интерфейс Serializable.
2.Список сериализуемых свойств объекта возвращается в __sleep() в массиве в виде строк, что крайне неудобено - лучше использовать интерфейс Serializable

*/

class MyClass 
{
    private $_data1;
	public $data2;
	public function __construct() {
        $this->_data1 = "My private data";
		$this->data2 = "My public data";
    }
	// автоматически!!! вызывается при попытке сериализации объекта этого класса
    public function __sleep() {
		echo 'Объект класса '.__CLASS__.' сериализован<br>';
		// список сериализуемых свойств объекта передаётся в массиве в виде строк, что крайне неудобено - лучше использовать интерфейс Serializable
        return array('_data1', 'data2');
    }
	// автоматически!!! вызывается при десериализации объекта этого класса
    public function __wakeup() {
		echo 'Объект класса '.__CLASS__.' десериализован<br>';
		// здесь можно прописать вызов метода подключкеия к БД 
    }
    public function getData() {
        return $this->_data1;
    }
}

$obj = new MyClass;
$ser = serialize($obj);			//сериализуем объект - вызов метода $obj->__sleep()
var_dump($ser);

$newobj = unserialize($ser);	//десериализуем объект - вызов метода $obj->__wakeup()
var_dump($newobj->getData());

?>