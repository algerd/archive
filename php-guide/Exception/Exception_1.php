<?php

class Exception
{
    private   $string;                          // Свойство для __toString                                            // выброшено исключение
    private   $trace;                           // Трассировка вызовов методов и функций 
    private   $previous;                        // Предыдущее исключение, для вложенных блоков try  
    
    protected $message = 'Unknown exception';   // Сообшение 
    protected $code = 0;                        // Код исключения,                                                 // определяемый пользователем
    protected $file;                            // Файл в котором было                                                // выброшено исключение
    protected $line;                            // Строка в которой было
    
    public function __construct( $message = null, $code = 0, Exception $previous = null );  // все параметры необязательны
        // $message - текст сообщения, $code - Код исключения, $previous - Предыдущее исключение. Используется при создания цепочки исключений.

    final private function __clone();           // Запрещает клонировать исключения

    final public  function getMessage();        // Возвращает сообшение исключения 
    final public  function getCode();           // Код исключения
    final public  function getFile();           // Файл, где выброшено исключение
    final public  function getLine();           // Строка, выбросившая исключени
    final public  function getTrace();          // Массив backtrace()
    final public  function getPrevious();       // Предыдущее исключение
    final public  function getTraceAsString();  // Трассировка вызовов как строка

    // Переопределяемое
    public function __toString();               // форматированная строка для отображения
}
/*
Исключение можно сгенерировать (как говорят, "выбросить") при помощи оператора throw, и можно перехватить (или, как говорят, "поймать") оператором catch. 
Код генерирующий исключение, должен быть окружен блоком try, для того чтобы можно было перехватить исключение. 
Каждый блок try должен иметь как минимум один соответствующий ему блок catch. Так же можно использовать несколько блоков catch, перехватывающих различные классы исключений. 
Нормальное выполнение (когда не генерируются исключения в блоках try или когда класс сгенерированного исключения не совпадает с классами, объявленными в соответствующих блоках catch) будет продолжено за последним блоком catch. 
Исключения так же могут быть сгенерированы (или вызваны еще раз) оператором throw внутри блока catch.

При генерации исключения код следующий за оператором throw исполнен не будет, а PHP предпримет попытку найти первый блок catch, перехватывающий исключение данного класса. 
Если исключение не будет перехвачено, PHP выдаст сообщение об ошибке: "Uncaught Exception ..." (Неперехваченное исключение), если не был определен обработчик ошибок при помощи функции set_exception_handler().

В PHP 5.5 и более поздних версиях также можно использовать блок finally после блока catch. 
Код в блоке finally всегда будет выполняться после кода в блоках try и catch, вне зависимости было ли брошено исключение или нет, перед тем как продолжится нормальное выполнение кода. 
*/